#!/bin/bash

rootDir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

dc=dmd
ld=dmd
#dc=$rootDir/util/dmd2/linux/bin64/dmd
#export LIBRARY_PATH=$rootDir/util/dmd2/linux/lib64
#export LD_LIBRARY_PATH=$rootDir/util/dmd2/linux/lib64
defaultlib="libphobos2.so" # libphobos2-ldc

#params for debug
sslLinkParams="-L-l:libssl.so.1.0.0 -L-l:libcrypto.so.1.0.0"
#sslLinkParams="-L-l:libssl.so -L-l:libcrypto.so"
defBuildParams="-c -op -debug -g -fPIC -vcolumns -w -defaultlib=$defaultlib" # -debug=data -debug=tick
defLinkParams="-L-l:$defaultlib"
flowBuildParams="-I$rootDir/ifc/core -I$rootDir/ifc/lib/openssl"
flowLinkParams="$sslLinkParams -L-l:libflow-core.so"
testBuildParams="-unittest -main"
testLinkParams="" #"-unittest"

#params for release
#defBuildParams="-release"
#defLinkParams=""

if [ $1 ]; then buildType=$1; else buildType=debug; fi
buildParams=${@:2}

# prepare build
rm -fr $rootDir/bin $rootDir/test $rootDir/ifc $rootDir/lib $rootDir/ext
mkdir -p $rootDir/bin
mkdir -p $rootDir/test
mkdir -p $rootDir/lib

export LIBRARY_PATH=/usr/lib:$rootDir/lib:$rootDir/ext
export LD_LIBRARY_PATH=/usr/lib:$rootDir/lib:$rootDir/ext

function buildOpenSSL {
    cd $rootDir/src/lib/openssl &&
    mkdir -p build &&

    echo "BUILDING lib/libopenssl.so ..." &&
    $dc -ofbuild/libopenssl.o $(find ./deimos -name "*.d") $defBuildParams -Hd=$rootDir/ifc/lib/openssl &&

    echo "LINKING lib/libopenssl.so ..." &&
    $ld -of$rootDir/lib/libopenssl.so build/libopenssl.o $sslLinkParams $defLinkParams -shared
}

function buildNanoMsg {
    cd $rootDir/src/lib/nanomsg &&
    mkdir -p build &&

    echo "BUILDING lib/libnanomsg.so ..." &&
    $dc -ofbuild/libnanomsg.o $(find ./deimos -name "*.d") $defBuildParams &&

    echo "LINKING lib/libnanomsg.so ..." &&
    $ld -of$rootDir/lib/libnanomsg.so build/libnanomsg.o $defLinkParams -shared
}

function buildCore {
    cd $rootDir/src/core &&
    mkdir -p build &&

    echo "BUILDING lib/libflow-core..." &&
    $dc -ofbuild/libflow-core.o $(find ./ -name "*.d") $defBuildParams -Hd=$rootDir/ifc/core -I$rootDir/ifc/lib/openssl &&

    echo "LINKING lib/libflow-core..." &&
    $ld -of$rootDir/lib/libflow-core.so build/libflow-core.o $sslLinkParams -L-l:libopenssl.so $defLinkParams -shared
}

function testCore {
    ret=-1
    cd $rootDir/src/core &&
    mkdir -p build &&

    echo "BUILDING test/test_flow-core..." &&
    $dc -ofbuild/libflow-core-test.o $(find ./ -name "*.d") $defBuildParams $testBuildParams -I$rootDir/src/lib/openssl &&

    echo "LINKING test/test_flow-core..." &&
    $ld -of$rootDir/test/test_flow-core build/libflow-core-test.o $sslLinkParams -L-l:libopenssl.so $defLinkParams $testLinkParams &&
    ret=0 &&

    echo "TESTING test/test_flow-core..." &&
    $rootDir/test/test_flow-core

    return $ret
}

function buildExt {
    cd $rootDir/src/ext/$1 &&
    mkdir -p build &&

    echo "BUILDING ext/libflow-$1..." &&
    $dc -ofbuild/libflow-$1.o $(find ./ -name "*.d") $defBuildParams $flowBuildParams -Hd=$rootDir/ifc/ext/$1 -I$rootDir/src/lib/openssl $2 &&

    echo "LINKING ext/libflow-$1..." &&
    $ld -of$rootDir/ext/libflow-$1.so build/libflow-$1.o $defLinkParams $flowLinkParams -shared ${@:3}
}

function testExt {
    ret=-1
    cd $rootDir/src/ext/$1 &&
    mkdir -p build &&

    echo "BUILDING test/test_flow-$1..." &&
    $dc -ofbuild/libflow-$1-test.o $(find ./ -name "*.d") $defBuildParams $flowBuildParams $testBuildParams -I$rootDir/src/lib/openssl $2 &&

    echo "LINKING test/test_flow-$1..." &&
    $ld -of$rootDir/test/test_flow-$1 build/libflow-$1-test.o $defLinkParams $flowLinkParams $testLinkParams ${@:3} &&
    ret=0 &&

    echo "TESTING test/test_flow-$1..." &&
    $rootDir/test/test_flow-$1

    return $ret
}

function buildBin {
    cd $rootDir/src/bin/$1 &&
    mkdir -p build &&

    echo "BUILDING $1..." &&
    $dc -ofbuild/flow-$1.o $(find ./ -name "*.d") $defBuildParams $flowBuildParams $2 &&

    echo "LINKING $1..." &&
    $ld -of$rootDir/bin/flow-$1 build/flow-$1.o $defLinkParams $flowLinkParams ${@:3}
}

function testBin {
    ret=-1
    cd $rootDir/src/bin/$1 &&
    mkdir -p build &&

    echo "BUILDING test_flow-..." &&
    $dc -ofbuild/flow-$1-test.o $(find ./ -name "*.d") $defBuildParams $flowBuildParams $testBuildParams $2 &&

    echo "LINKING test_flow-..." &&
    $ld -of$rootDir/test/test_flow-$1 build/flow-$1-test.o $defLinkParams $flowLinkParams $testLinkParams ${@:3} &&
    ret=0 &&

    echo "TESTING test_flow-$1..." &&
    $rootDir/test/test_flow-$1

    return $ret
}

function testDoc {
    ret=-1
    cd $rootDir/doc/src/ &&
    mkdir -p build &&

    echo "BUILDING doc_$1..." &&
    $dc -ofbuild/doc_$1.o $1 $defBuildParams $flowBuildParams $2 &&

    echo "LINKING doc_$1..." &&
    $ld -of$rootDir/test/doc_$1 build/doc_$1.o $defLinkParams $flowLinkParams ${@:3} &&
    ret=0 &&

    echo "TESTING doc_$1..." &&
    $rootDir/test/doc_$1

    return $ret
}

# LIBRARIES
buildOpenSSL &&
buildNanoMsg &&

# CORE
buildCore &&
testCore &&

# EXTENSIONS
buildExt ipc-nanomsg -I$rootDir/src/lib/nanomsg -L-l:libnanomsg.so &&
testExt ipc-nanomsg -I$rootDir/src/lib/nanomsg -L-l:libnanomsg.so &&

buildExt complex &&
testExt complex &&

# BINARIES
buildBin complex-gen -I$rootDir/ifc/ext/complex -L-l:libflow-complex.so &&
#testBin complex-gen -L-l:libflow-complex.so &&

buildBin run &&
#testBin run &&

testDoc introduction.d &&

exit