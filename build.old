#!/bin/bash

rootDir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

dc=dmd
#dc=$rootDir/util/dmd2/linux/bin64/dmd
#export LIBRARY_PATH=$rootDir/util/dmd2/linux/lib64
#export LD_LIBRARY_PATH=$rootDir/util/dmd2/linux/lib64
defaultlib="libphobos2.so" # libphobos2-ldc

#params for debug
defBuildParams="-c -op -debug -g -fPIC -vcolumns -w" # -debug=data -debug=tick
defLinkParams="-g -L-l:$defaultlib -defaultlib=$defaultlib"
flowBuildParams="-I$rootDir/ifc/core"
flowLinkParams="-L-l:libflow-core.so"
testBuildParams="-unittest -main"
testLinkParams="-unittest"

#params for release
#defBuildParams="-release"
#defLinkParams=""

if [ $1 ]; then buildType=$1; else buildType=debug; fi
buildParams=${@:2}

# prepare build
rm -fr $rootDir/bin $rootDir/tst $rootDir/ifc $rootDir/lib $rootDir/ext
mkdir -p $rootDir/bin
mkdir -p $rootDir/tst
mkdir -p $rootDir/ifc/core
mkdir -p $rootDir/ifc/ext
mkdir -p $rootDir/ifc/lib
mkdir -p $rootDir/lib
mkdir -p $rootDir/ext

export LIBRARY_PATH=$rootDir/lib:$rootDir/ext:LIBRARY_PATH
export LD_LIBRARY_PATH=$rootDir/lib:$rootDir/ext:LD_LIBRARY_PATH

function buildNanoMsg {
    cd $rootDir/src/lib/nanomsg &&
    mkdir -p build &&

    echo "BUILDING lib/libnanomsg-wrapper.so ..." &&
    $dc $defBuildParams -ofbuild/libnanomsg-wrapper.o $(find ./deimos -name "*.d") &&

    echo "LINKING lib/libnanomsg-wrapper.so ..." &&
    $dc $defLinkParams -of$rootDir/lib/libnanomsg.so build/libnanomsg-wrapper.o -L-l:libnanomsg.so -shared
}

function buildCore {
    cd $rootDir/src/core &&
    mkdir -p build &&

    echo "BUILDING lib/libflow-core..." &&
    $dc $defBuildParams -Hd=$rootDir/ifc/core -ofbuild/libflow-core.o $(find ./ -name "*.d") &&

    echo "LINKING lib/libflow-core..." &&
    $dc $defLinkParams -of$rootDir/lib/libflow-core.so build/libflow-core.o -shared
}

function testCore {
    cd $rootDir/src/core &&
    mkdir -p build &&

    echo "BUILDING tst/libflow-core-test..." &&
    $dc $defBuildParams $testBuildParams -ofbuild/libflow-core-test.o $(find ./ -name "*.d") &&

    echo "LINKING tst/libflow-core-test..." &&
    $dc $defLinkParams $testLinkParams -of$rootDir/tst/test-libflow-core build/libflow-core-test.o &&

    $rootDir/tst/test-libflow-core
}

function buildExt {
    cd $rootDir/src/ext/$1 &&
    mkdir -p build &&

    echo "BUILDING ext/libflow-$1..." &&
    $dc $defBuildParams $flowBuildParams -Hd=$rootDir/ifc/ext/$1 -ofbuild/libflow-$1.o $2 $(find ./ -name "*.d") &&

    echo "LINKING ext/libflow-$1..." &&
    $dc $defLinkParams $flowLinkParams -of$rootDir/ext/libflow-$1.so build/libflow-$1.o -shared $3 #${@:2}
}

function testExt {
    cd $rootDir/src/ext/$1 &&
    mkdir -p build &&

    echo "BUILDING tst/test-libflow-$1..." &&
    $dc $defBuildParams $flowBuildParams $testBuildParams -ofbuild/libflow-$1-test.o $2 $(find ./ -name "*.d") &&

    echo "LINKING tst/test-libflow-$1..." &&
    $dc $defLinkParams $flowLinkParams $testLinkParams -of$rootDir/tst/test-libflow-$1 build/libflow-$1-test.o $3 &&#${@:2} &&

    $rootDir/tst/test-libflow-$1
}

function buildBin {
    cd $rootDir/src/bin/$1 &&
    mkdir -p build &&

    echo "BUILDING $1..." &&
    $dc $defBuildParams $flowBuildParams -ofbuild/flow-$1.o $(find ./ -name "*.d") &&

    echo "LINKING $1..." &&
    $dc $defLinkParams $flowLinkParams -of$rootDir/bin/flow-$1 build/flow-$1.o ${@:2}
}

function testBin {
    cd $rootDir/src/bin/$1 &&
    mkdir -p build &&

    echo "BUILDING $1-test..." &&
    $dc $defBuildParams $flowBuildParams $testBuildParams -ofbuild/flow-$1-test.o $(find ./ -name "*.d") &&

    echo "LINKING $1-test..." &&
    $dc $defLinkParams $flowLinkParams $testLinkParams -of$rootDir/tst/test-flow-$1 build/flow-$1-test.o ${@:2} &&

    $rootDir/tst/test-flow-$1
}

buildNanoMsg &&

buildCore &&
buildExt ipc-nanomsg -I$rootDir/src/lib/nanomsg -L-l:libnanomsg.so &&
#buildBin run &&

buildExt complex &&
#buildBin complex-gen -L-l:libflow-complex.so &&

testCore &&
testExt ipc-nanomsg -I$rootDir/src/lib/nanomsg -L-l:libnanomsg.so &&
#testBin run &&

testExt complex #&&
#testBin complex-gen -L-l:libflow-complex.so
